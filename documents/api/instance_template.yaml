Resource:
  get:
    summary:  인스턴스 템플릿 목록 조회
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-disaster-recovery/documents/-/blob/master/functions.md#fc-dr-09221
    tags:
      - "Instance Template"
    parameters:
      - $ref: 'parameter.yaml#/Pagination/Limit'
      - $ref: 'parameter.yaml#/Pagination/Offset'
      - $ref: '#components/parameters/Name'
      - $ref: '#components/parameters/OwnerGroup'

    responses:
      200:
        $ref: '#/components/responses/InstanceTemplates'
      204:
        description: No Contents
      400:
        description: Bad Request
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

  post:
    summary: 인스턴스 템플릿 등록
    description: 설명추가
    externalDocs:
      url:
    tags:
      - "Instance Template"
    requestBody:
      $ref: '#/components/requestBodies/AddInstanceTemplate'
    responses:
      201:
        $ref: '#/components/responses/InstanceTemplate'
      400:
        description: Bad Request
      409:
        description: Conflict
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Object:
  get:
    summary: 인스턴스 템플릿 조회
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-disaster-recovery/documents/-/blob/master/functions.md#fc-dr-05021
    tags:
      - "Instance Template"
    parameters:
      - $ref: '#/components/parameters/InstanceTemplateID'
    responses:
      200:
        $ref: '#/components/responses/InstanceTemplate'
      400:
        description: Bad Request
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

  delete:
    summary: 인스턴스 템플릿 삭제
    description: 설명추가
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-disaster-recovery/documents/-/blob/master/functions.md#fc-dr-05061
    tags:
      - "Instance Template"
    parameters:
      - $ref: '#/components/parameters/InstanceTemplateID'
    responses:
      200:
        $ref: 'response.yaml#/Message'
      400:
        description: Bad Request
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

components:
  parameters:
    InstanceTemplateID:
      in: path
      name: template_id
      description: 인스턴스 템플릿의 ID
      required: true
      schema:
        type: integer
        format: uint64

    OwnerGroup:
      in: query
      name: owner_group_id
      description: 보호그룹 원본 클러스터의 Owner 그룹 ID
      schema:
        type: integer
        format: uint64

    Name:
      in: query
      name: name
      description: 보호그룹 이름
      schema:
        type: string

  requestBodies:
    AddInstanceTemplate:
      content:
        application/json:
          schema:
            type: object
            properties:
              template:
                $ref: 'schema.yaml#/InstanceTemplate'
          examples:
            creation:
              value: {
                template: {
                  name: "인스턴스 템플릿",
                  owner_group: {
                    id: 1
                  },
                  remarks: "재해 복구 인스턴스의 기동계획을 저장하기위한 템플릿",
                  instances: [
                    {
                      protection_cluster_instance_name: "instance1",
                      auto_start_flag: true,
                      template_instance_dependencies: [ ]
                    },
                    {
                      protection_cluster_instance_name: "instance2",
                      auto_start_flag: true,
                      diagnosis_flag: true,
                      diagnosis_method_code: "dr.recovery.plan.instance.diagnosis.method.tcp-socket",
                      diagnosis_method_data: "{\"Protocol\": \"TCP\", \"Port\": 8000}",
                      diagnosis_timeout: 600,
                      template_instance_dependencies: [ { name: "instance1" } ]
                    }
                  ]
                },
              }

  responses:
    InstanceTemplates:
      description: 인스턴스 템플릿 목록을 반환한다.
      content:
        application/json:
          schema:
            type: object
            properties:
              instance_templates:
                type: array
                items:
                  $ref: 'schema.yaml#/InstanceTemplate'
              pagination:
                $ref: 'schema.yaml#/Pagination'
              message:
                $ref: 'schema.yaml#/Message'
          example:
            instance_templates: [
              {
                id: 1,
                name: "인스턴스 템플릿1",
                owner_group: {
                  id: 1, name: "개발팀1", remarks: "개발하는 팀이다", deleted_flag: false
                },
                remarks: "재해 복구 인스턴스의 기동계획을 저장하기위한 템플릿",
                created_at: 1611802679,
                instances: [
                  {
                    protection_cluster_instance_name: "instance1",
                    auto_start_flag: true,
                    template_instance_dependencies: [ ]
                  },
                  {
                    protection_cluster_instance_name: "instance2",
                    auto_start_flag: true,
                    diagnosis_flag: true,
                    diagnosis_method_code: "dr.recovery.plan.instance.diagnosis.method.tcp-socket",
                    diagnosis_method_data: "{\"Protocol\": \"TCP\", \"Port\": 8000}",
                    diagnosis_timeout: 600,
                    template_instance_dependencies: [ { name: "instance1" } ]
                  }
                ]
              },
              {
                id: 2,
                name: "인스턴스 템플릿2",
                owner_group: {
                  id: 1, name: "개발팀1", remarks: "개발하는 팀이다", deleted_flag: false
                },
                remarks: "재해 복구 인스턴스의 기동계획을 저장하기위한 템플릿",
                created_at: 1611802679,
                instances: [
                  {
                    protection_cluster_instance_name: "instance3",
                    auto_start_flag: true,
                    template_instance_dependencies: [ ]
                  },
                  {
                    protection_cluster_instance_name: "instance4",
                    auto_start_flag: true,
                    diagnosis_flag: true,
                    diagnosis_method_code: "dr.recovery.plan.instance.diagnosis.method.tcp-socket",
                    diagnosis_method_data: "{\"Protocol\": \"TCP\", \"Port\": 8000}",
                    diagnosis_timeout: 600,
                    template_instance_dependencies: [ { name: "instance3" } ]
                  }
                ]
              }
            ]

    InstanceTemplate:
      description: 인스턴스 템플릿 상세정보를 반환한다.
      content:
        application/json:
          schema:
            type: object
            properties:
              instance_template:
                $ref: 'schema.yaml#/InstanceTemplate'
              message:
                $ref: 'schema.yaml#/Message'
          example: {
            instance_template: {
              id: 1,
              name: "인스턴스 템플릿",
              owner_group: {
                id: 1, name: "개발팀1", remarks: "개발하는 팀이다", deleted_flag: false
              },
              remarks: "재해 복구 인스턴스의 기동계획을 저장하기위한 템플릿",
              created_at: 1611802679,
              instances: [
                {
                  protection_cluster_instance_name: "instance1",
                  auto_start_flag: true,
                  template_instance_dependencies: [ ]
                },
                {
                  protection_cluster_instance_name: "instance2",
                  auto_start_flag: true,
                  diagnosis_flag: true,
                  diagnosis_method_code: "dr.recovery.plan.instance.diagnosis.method.tcp-socket",
                  diagnosis_method_data: "{\"Protocol\": \"TCP\", \"Port\": 8000}",
                  diagnosis_timeout: 600,
                  template_instance_dependencies: [ { name: "instance1" } ]
                }
              ]
            }
          }